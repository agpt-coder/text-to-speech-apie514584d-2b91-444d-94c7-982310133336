// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id            String         @id @default(dbgenerated("gen_random_uuid()"))
  email         String         @unique
  password      String
  role          UserRole       @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  VoiceProfiles VoiceProfile[]
  TTSRequests   TTSRequest[]
  AccessTokens  AccessToken[]
}

model VoiceProfile {
  id          String       @id @default(dbgenerated("gen_random_uuid()"))
  userId      String
  User        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  voiceType   String
  speed       Float
  pitch       Float
  volume      Float
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  TTSRequests TTSRequest[]
}

model TTSRequest {
  id             String        @id @default(dbgenerated("gen_random_uuid()"))
  userId         String?
  User           User?         @relation(fields: [userId], references: [id], onDelete: SetNull)
  textInput      String
  ssmlInput      String?
  voiceProfileId String?
  VoiceProfile   VoiceProfile? @relation(fields: [voiceProfileId], references: [id], onDelete: SetNull)
  AudioOutput    AudioOutput?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model AudioOutput {
  id           String        @id @default(dbgenerated("gen_random_uuid()"))
  ttsRequestId String        @unique
  TTSRequest   TTSRequest    @relation(fields: [ttsRequestId], references: [id], onDelete: Cascade)
  fileType     AudioFileType
  filePath     String
  createdAt    DateTime      @default(now())
}

model APIIntegration {
  id          String   @id @default(dbgenerated("gen_random_uuid()"))
  serviceName String
  apiKey      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AccessToken {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum UserRole {
  USER
  CONTENTCREATOR
  EDUCATOR
  DEVELOPER
  ADMIN
}

enum AudioFileType {
  MP3
  WAV // Placeholder for future support
}

